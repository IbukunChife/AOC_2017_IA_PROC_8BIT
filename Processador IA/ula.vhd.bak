LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.NUMERIC_STD.all;

ENTITY ula IS
PORT(dadoA: IN STD_LOGIC_VECTOR(7 DOWNTO 0);
	  dadoB: IN STD_LOGIC_VECTOR(7 DOWNTO 0);
	  clock: IN STD_LOGIC;
	  seletor: IN STD_LOGIC_VECTOR(2 DOWNTO 0);
	  resultado: OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
	  jump: OUT STD_LOGIC_VECTOR(7 DOWNTO 0)
	  );
END ula;

ARCHITECTURE funcao OF ula IS
BEGIN
	PROCESS(clock,dadoA,dadoB,seletor)
	VARIABLE cont: STD_LOGIC;
	VARIABLE mult: STD_LOGIC_VECTOR(15 DOWNTO 0);
	BEGIN
		IF(clock'EVENT) AND (clock = '1') THEN
			IF(seletor = "000") THEN --AND
				resultado <= (dadoA AND dadoB); 
			
			ELSIF(seletor = "001") THEN -- OR
				resultado <= (dadoA OR dadoB);
			
			ELSIF(seletor = "010") THEN --SOMA
				FOR i IN 0 to 7 LOOP
					resultado(i) <= ((dadoA(i) xor dadoB(i)) xor cont);
					cont := (dadoA(i) and dadoB(i)) or ((dadoA(i) xor dadoB(i)) and cont);
				END LOOP;
			
			ELSIF(seletor = "011") THEN --SUBTRAÇAO
				FOR i IN 0 to 7 LOOP
					resultado(i) <= (( dadoA(i) xor NOT dadoB(i)) xor cont);
					cont := ( dadoA(i) and  NOT dadoB(i)) or ((dadoA(i) xor NOT dadoB(i)) and cont);
				END LOOP;
			
			ELSIF(seletor = "100") THEN --MULTIPLICAÇÃO
				mult := (dadoA*dadoB);
				resultado <= mult(7 DOWNTO 0);
			
			ELSIF(seletor = "101") THEN --CAMPARAÇÃO
				IF(dadoA < dadoB) THEN
					jump <= "00000000";
				ELSE
					jump <= "00000001";
				END IF;
			
			ELSIF(seletor = "110")THEN --IGUALDADE
				IF(dadoA = dadoB)THEN
					jump <= "00000000";
				ELSE
					jump <= "00000001";
				END IF;
				
			ELSIF(seletor = "111")THEN --SLT/ZERO
				IF(dadoA = "00000000")THEN
					jump <= "00000000";
				ELSE
					jump <= "00000001";
				END IF;
			END IF;
		END IF;
	END PROCESS;
END funcao;
// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 15.1.0 Build 185 10/21/2015 SJ Lite Edition"

// DATE "01/19/2018 13:53:52"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module rom8 (
	address,
	data);
input 	[7:0] address;
output 	[7:0] data;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \data[0]~output_o ;
wire \data[1]~output_o ;
wire \data[2]~output_o ;
wire \data[3]~output_o ;
wire \data[4]~output_o ;
wire \data[5]~output_o ;
wire \data[6]~output_o ;
wire \data[7]~output_o ;
wire \address[4]~input_o ;
wire \address[5]~input_o ;
wire \address[6]~input_o ;
wire \address[7]~input_o ;
wire \Mux1~0_combout ;
wire \address[0]~input_o ;
wire \Mux2~0_combout ;
wire \address[1]~input_o ;
wire \Mux4~0_combout ;
wire \address[2]~input_o ;
wire \Mux6~0_combout ;
wire \address[3]~input_o ;
wire \Mux8~0_combout ;


cyclonev_io_obuf \data[0]~output (
	.i(!\Mux1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \data[0]~output .bus_hold = "false";
defparam \data[0]~output .open_drain_output = "true";
defparam \data[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \data[1]~output (
	.i(!\Mux1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \data[1]~output .bus_hold = "false";
defparam \data[1]~output .open_drain_output = "true";
defparam \data[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \data[2]~output (
	.i(!\Mux1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \data[2]~output .bus_hold = "false";
defparam \data[2]~output .open_drain_output = "true";
defparam \data[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \data[3]~output (
	.i(!\Mux1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \data[3]~output .bus_hold = "false";
defparam \data[3]~output .open_drain_output = "true";
defparam \data[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \data[4]~output (
	.i(\Mux2~0_combout ),
	.oe(\Mux1~0_combout ),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \data[4]~output .bus_hold = "false";
defparam \data[4]~output .open_drain_output = "false";
defparam \data[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \data[5]~output (
	.i(\Mux4~0_combout ),
	.oe(\Mux1~0_combout ),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \data[5]~output .bus_hold = "false";
defparam \data[5]~output .open_drain_output = "false";
defparam \data[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \data[6]~output (
	.i(\Mux6~0_combout ),
	.oe(\Mux1~0_combout ),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \data[6]~output .bus_hold = "false";
defparam \data[6]~output .open_drain_output = "false";
defparam \data[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \data[7]~output (
	.i(\Mux8~0_combout ),
	.oe(\Mux1~0_combout ),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \data[7]~output .bus_hold = "false";
defparam \data[7]~output .open_drain_output = "false";
defparam \data[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \address[4]~input (
	.i(address[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\address[4]~input_o ));
// synopsys translate_off
defparam \address[4]~input .bus_hold = "false";
defparam \address[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \address[5]~input (
	.i(address[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\address[5]~input_o ));
// synopsys translate_off
defparam \address[5]~input .bus_hold = "false";
defparam \address[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \address[6]~input (
	.i(address[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\address[6]~input_o ));
// synopsys translate_off
defparam \address[6]~input .bus_hold = "false";
defparam \address[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \address[7]~input (
	.i(address[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\address[7]~input_o ));
// synopsys translate_off
defparam \address[7]~input .bus_hold = "false";
defparam \address[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (!\address[4]~input_o  & (!\address[5]~input_o  & (!\address[6]~input_o  & !\address[7]~input_o )))

	.dataa(!\address[4]~input_o ),
	.datab(!\address[5]~input_o ),
	.datac(!\address[6]~input_o ),
	.datad(!\address[7]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux1~0 .extended_lut = "off";
defparam \Mux1~0 .lut_mask = 64'h8000800080008000;
defparam \Mux1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \address[0]~input (
	.i(address[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\address[0]~input_o ));
// synopsys translate_off
defparam \address[0]~input .bus_hold = "false";
defparam \address[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (!\address[4]~input_o  & \address[0]~input_o )

	.dataa(!\address[4]~input_o ),
	.datab(!\address[0]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux2~0 .extended_lut = "off";
defparam \Mux2~0 .lut_mask = 64'h2222222222222222;
defparam \Mux2~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \address[1]~input (
	.i(address[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\address[1]~input_o ));
// synopsys translate_off
defparam \address[1]~input .bus_hold = "false";
defparam \address[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux4~0 (
// Equation(s):
// \Mux4~0_combout  = (!\address[4]~input_o  & \address[1]~input_o )

	.dataa(!\address[4]~input_o ),
	.datab(!\address[1]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux4~0 .extended_lut = "off";
defparam \Mux4~0 .lut_mask = 64'h2222222222222222;
defparam \Mux4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \address[2]~input (
	.i(address[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\address[2]~input_o ));
// synopsys translate_off
defparam \address[2]~input .bus_hold = "false";
defparam \address[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux6~0 (
// Equation(s):
// \Mux6~0_combout  = (!\address[4]~input_o  & \address[2]~input_o )

	.dataa(!\address[4]~input_o ),
	.datab(!\address[2]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux6~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux6~0 .extended_lut = "off";
defparam \Mux6~0 .lut_mask = 64'h2222222222222222;
defparam \Mux6~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \address[3]~input (
	.i(address[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\address[3]~input_o ));
// synopsys translate_off
defparam \address[3]~input .bus_hold = "false";
defparam \address[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux8~0 (
// Equation(s):
// \Mux8~0_combout  = (!\address[4]~input_o  & \address[3]~input_o )

	.dataa(!\address[4]~input_o ),
	.datab(!\address[3]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux8~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux8~0 .extended_lut = "off";
defparam \Mux8~0 .lut_mask = 64'h2222222222222222;
defparam \Mux8~0 .shared_arith = "off";
// synopsys translate_on

assign data[0] = \data[0]~output_o ;

assign data[1] = \data[1]~output_o ;

assign data[2] = \data[2]~output_o ;

assign data[3] = \data[3]~output_o ;

assign data[4] = \data[4]~output_o ;

assign data[5] = \data[5]~output_o ;

assign data[6] = \data[6]~output_o ;

assign data[7] = \data[7]~output_o ;

endmodule
